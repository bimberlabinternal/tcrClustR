% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/congaWrapper.R
\name{RunConga}
\alias{RunConga}
\title{RunConga}
\usage{
RunConga(
  seuratObj = NULL,
  metadata = NULL,
  organism = "human",
  formatMetadata = T,
  postFormattingMetadataCsvPath = "./congaInput.csv",
  chains = c("TRA", "TRB"),
  cleanMetadata = T,
  spikeInDataframe = NULL,
  minimumClonesPerSubject = 2,
  rdsOutputPath = "./tcrdist3DistanceMatrices/",
  pythonExecutable = NULL
)
}
\arguments{
\item{seuratObj}{Seurat object containing TCR information. If NULL, metadata must be provided.}

\item{metadata}{Data frame containing metadata. If NULL, seuratObj must be provided.}

\item{organism}{Organism to use for Conga. Default is 'human'.}

\item{formatMetadata}{Boolean controlling whether to format the metadata for Conga using the internal FormatMetadataForConga function. Default is TRUE.}

\item{postFormattingMetadataCsvPath}{Path to the output CSV file from FormatMetadataForConga. Default is './congaInput.csv'.}

\item{chains}{Vector of TCR chains to include in the analysis. Default is c("TRA", "TRB").}

\item{cleanMetadata}{Pass-through boolean controlling whether to clean the metadata by removing rows with NA values or commas in the specified chains. Default is TRUE.}

\item{spikeInDataframe}{Data frame containing known CDR3s and gene segments to be included in the clustering. Default is NULL.}

\item{minimumClonesPerSubject}{Minimum number of clones per subject to include in the analysis. Default is 2.}

\item{rdsOutputPath}{Path to the output directory for the RDS files containing the distance matrices. Default is "./tcrdist3DistanceMatrices/".}

\item{pythonExecutable}{Path to the python executable. Default is NULL, but imputes to reticulate::py_exe().}
}
\description{
Run Conga's implementation of tcrdist on a Seurat object/metadata
}
\examples{
\dontrun{
    RunConga(seuratObj = seuratObj,
             metadata = NULL,
             formatMetadata = T,
             postFormattingMetadataCsvPath = './congaInput.csv',
             chains = c("TRA", "TRB"),
             cleanMetadata = T,
             minimumClonesPerSubject = 2,
             rdsOutputPath = "./tcrdist3DistanceMatrices/",
             pythonExecutable = reticulate::py_exe()
             )
    spikeInDataframe <- data.frame(CloneNames = rep(1:3),
                                 TRA_V = c("TRAV1-2", "TRAV1-2", "TRAV1-2"),
                                 TRA_J = c("TRAJ33", "TRAJ20", "TRAJ33"),
                                 TRA = c("CAVRDSNYQLIW", "CAVSLQDYKLSF", "CAVRDSNYQLIW"),
                                 TRB_V = c("TRBV6-4", "TRBV6-4", "TRBV6-4"),
                                 TRB_J = c("TRBJ1-1", "TRBJ2-1", "TRBJ2-3"),
                                 TRB = c("CASSAAAAAAAAFF", "CASSVVVVVVVVQF", "CASSWWWWWWWWQY")
}

}
