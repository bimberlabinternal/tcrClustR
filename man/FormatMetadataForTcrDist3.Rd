% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tcrDist3Utils.R
\name{FormatMetadataForTcrDist3}
\alias{FormatMetadataForTcrDist3}
\title{Format metadata for tcrDist3}
\usage{
FormatMetadataForTcrDist3(
  metadata,
  outputCsv = "./tcrDist3Input.csv",
  chains = c("TRA", "TRB"),
  organism = "human",
  cleanMetadata = T,
  summarizeClones = T,
  imputeCloneNames = T,
  minimumClonesPerSubject = 100,
  writeUnannotatedGeneSegmentsToFile = T,
  spikeInDataframe = NULL,
  pythonExecutable = NULL
)
}
\arguments{
\item{metadata}{Data frame containing metadata.}

\item{outputCsv}{Path to the output CSV file.}

\item{chains}{TCR chains to include in the analysis. TRA/TRB supported and tested, but others likely work.}

\item{organism}{Organism to use for tcrDist3. Default is 'human'.}

\item{cleanMetadata}{Boolean controlling whether to clean the metadata by removing rows with NA values or commas in the specified chains.}

\item{summarizeClones}{Boolean controlling whether to summarize clones by SubjectId, TRA, TRB, TRA_V, TRA_J, TRB_V, and TRB_J.}

\item{imputeCloneNames}{Boolean controlling whether to impute clone names if they are missing.}

\item{minimumClonesPerSubject}{Minimum number of clones per subject to include in the analysis. Default is 2.}

\item{writeUnannotatedGeneSegmentsToFile}{Boolean controlling whether to write unannotated gene segments to a file (filtered_(chain)_gene_segments.csv).}

\item{spikeInDataframe}{Data frame containing spike-in data. Default is NULL. See examples for formatting requirements.}

\item{pythonExecutable}{Path to the python executable. Default is NULL, but imputes to reticulate::py_exe().}
}
\value{
a properly formatted metadata dataframe.
}
\description{
This function formats a seurat object's metadata (with TCR information appended) for tcrDist3 distance caluclations.
}
\examples{
\dontrun{
spikeInDataframe <- data.frame(CloneNames = rep(1:3),
                                 TRA_V = c("TRAV1-2", "TRAV1-2", "TRAV1-2"),
                                 TRA_J = c("TRAJ33", "TRAJ20", "TRAJ33"),
                                 TRA = c("CAVRDSNYQLIW", "CAVSLQDYKLSF", "CAVRDSNYQLIW"),
                                 TRB_V = c("TRBV6-4", "TRBV6-4", "TRBV6-4"),
                                 TRB_J = c("TRBJ1-1", "TRBJ2-1", "TRBJ2-3"),
                                 TRB = c("CASSAAAAAAAAFF", "CASSVVVVVVVVQF", "CASSWWWWWWWWQY"))
}
}
